package decision_generator.utility;

public enum ColumnIdentify {
    A(0),B(1),C(2),D(3),E(4),F(5),G(6),H(7),I(8),J(9),K(10),L(11),M(12),N(13),O(14),P(15),Q(16),R(17),S(18),T(19),U(20),V(21),W(22),X(23),Y(24),Z(25),
    AA(26),AB(27),AC(28),AD(29),AE(30),AF(31),AG(32),AH(33),AI(34),AJ(35),AK(36),AL(37),AM(38),AN(39),AO(40),AP(41),AQ(42),AR(43),AS(44),AT(45),AU(46),AV(47),AW(48),AX(49),AY(50),AZ(51),
    BA(52),BB(53),BC(54),BD(55),BE(56),BF(57),BG(58),BH(59),BI(60),BJ(61),BK(62),BL(63),BM(64),BN(65),BO(66),BP(67),BQ(68),BR(69),BS(70),BT(71),BU(72),BV(73),BW(74),BX(75),BY(76),BZ(77),
    CA(78),CB(79),CC(80),CD(81),CE(82),CF(83),CG(84),CH(85),CI(86),CJ(87),CK(88),CL(89),CM(90),CN(91),CO(92),CP(93),CQ(94),CR(95),CS(96),CT(97),CU(98),CV(99),CW(100),CX(101),CY(102),CZ(103),
    DA(104),DB(105),DC(106),DD(107),DE(108),DF(109),DG(110),DH(111),DI(112),DJ(113),DK(114),DL(115),DM(116),DN(117),DO(118),DP(119),DQ(120),DR(121),DS(122),DT(123),DU(124),DV(125),DW(126),DX(127),DY(128),DZ(129),
    EA(130),EB(131),EC(132),ED(133),EE(134),EF(135),EG(136),EH(137),EI(138),EJ(139),EK(140),EL(141),EM(142),EN(143),EO(144),EP(145),EQ(146),ER(147),ES(148),ET(149),EU(150),EV(151),EW(152),EX(153),EY(154),EZ(155),
    FA(156),FB(157),FC(158),FD(159),FE(160),FF(161),FG(162),FH(163),FI(164),FJ(165),FK(166),FL(167),FM(168),FN(169),FO(170),FP(171),FQ(172),FR(173),FS(174),FT(175),FU(176),FV(177),FW(178),FX(179),FY(180),FZ(181),
    GA(182),GB(183),GC(184),GD(185),GE(186),GF(187),GG(188),GH(189),GI(190),GJ(191),GK(192),GL(193),GM(194),GN(195),GO(196),GP(197),GQ(198),GR(199),GS(200),GT(201),GU(202),GV(203),GW(204),GX(205),GY(206),GZ(207),
    HA(208),HB(209),HC(210),HD(211),HE(212),HF(213),HG(214),HH(215),HI(216),HJ(217),HK(218),HL(219),HM(220),HN(221),HO(222),HP(223),HQ(224),HR(225),HS(226),HT(227),HU(228),HV(229),HW(230),HX(231),HY(232),HZ(233),
    IA(234),IB(235),IC(236),ID(237),IE(238),IF(239),IG(240),IH(241),II(242),IJ(243),IK(244),IL(245),IM(246),IN(247),IO(248),IP(249),IQ(250),IR(251),IS(252),IT(253),IU(254),IV(255),IW(256),IX(257),IY(258),IZ(259),
    JA(260),JB(261),JC(262),JD(263),JE(264),JF(265),JG(266),JH(267),JI(268),JJ(269),JK(270),JL(271),JM(272),JN(273),JO(274),JP(275),JQ(276),JR(277),JS(278),JT(279),JU(280),JV(281),JW(282),JX(283),JY(284),JZ(285),
    KA(286),KB(287),KC(288),KD(289),KE(290),KF(291),KG(292),KH(293),KI(294),KJ(295),KK(296),KL(297),KM(298),KN(299),KO(300),KP(301),KQ(302),KR(303),KS(304),KT(305),KU(306),KV(307),KW(308),KX(309),KY(310),KZ(311),
    LA(312),LB(313),LC(314),LD(315),LE(316),LF(317),LG(318),LH(319),LI(320),LJ(321),LK(322),LL(323),LM(324),LN(325),LO(326),LP(327),LQ(328),LR(329),LS(330),LT(331),LU(332),LV(333),LW(334),LX(335),LY(336),LZ(337),
    MA(338),MB(339),MC(340),MD(341),ME(342),MF(343),MG(344),MH(345),MI(346),MJ(347),MK(348),ML(349),MM(350),MN(351),MO(352),MP(353),MQ(354),MR(355),MS(356),MT(357),MU(358),MV(359),MW(360),MX(361),MY(362),MZ(363),
    NA(364),NB(365),NC(366),ND(367),NE(368),NF(369),NG(370),NH(371),NI(372),NJ(373),NK(374),NL(375),NM(376),NN(377),NO(378),NP(379),NQ(380),NR(381),NS(382),NT(383),NU(384),NV(385),NW(386),NX(387),NY(388),NZ(389),
    OA(390),OB(391),OC(392),OD(393),OE(394),OF(395),OG(396),OH(397),OI(398),OJ(399),OK(400),OL(401),OM(402),ON(403),OO(404),OP(405),OQ(406),OR(407),OS(408),OT(409),OU(410),OV(411),OW(412),OX(413),OY(414),OZ(415),
    PA(416),PB(417),PC(418),PD(419),PE(420),PF(421),PG(422),PH(423),PI(424),PJ(425),PK(426),PL(427),PM(428),PN(429),PO(430),PP(431),PQ(432),PR(433),PS(434),PT(435),PU(436),PV(437),PW(438),PX(439),PY(440),PZ(441),
    QA(442),QB(443),QC(444),QD(445),QE(446),QF(447),QG(448),QH(449),QI(450),QJ(451),QK(452),QL(453),QM(454),QN(455),QO(456),QP(457),QQ(458),QR(459),QS(460),QT(461),QU(462),QV(463),QW(464),QX(465),QY(466),QZ(467),
    RA(468),RB(469),RC(470),RD(471),RE(472),RF(473),RG(474),RH(475),RI(476),RJ(477),RK(478),RL(479),RM(480),RN(481),RO(482),RP(483),RQ(484),RR(485),RS(486),RT(487),RU(488),RV(489),RW(490),RX(491),RY(492),RZ(493),
    SA(494),SB(495),SC(496),SD(497),SE(498),SF(499),SG(500),SH(501),SI(502),SJ(503),SK(504),SL(505),SM(506),SN(507),SO(508),SP(509),SQ(510),SR(511),SS(512),ST(513),SU(514),SV(515),SW(516),SX(517),SY(518),SZ(519),
    TA(520),TB(521),TC(522),TD(523),TE(524),TF(525),TG(526),TH(527),TI(528),TJ(529),TK(530),TL(531),TM(532),TN(533),TO(534),TP(535),TQ(536),TR(537),TS(538),TT(539),TU(540),TV(541),TW(542),TX(543),TY(544),TZ(545),
    UA(546),UB(547),UC(548),UD(549),UE(550),UF(551),UG(552),UH(553),UI(554),UJ(555),UK(556),UL(557),UM(558),UN(559),UO(560),UP(561),UQ(562),UR(563),US(564),UT(565),UU(566),UV(567),UW(568),UX(569),UY(570),UZ(571),
    VA(572),VB(573),VC(574),VD(575),VE(576),VF(577),VG(578),VH(579),VI(580),VJ(581),VK(582),VL(583),VM(584),VN(585),VO(586),VP(587),VQ(588),VR(589),VS(590),VT(591),VU(592),VV(593),VW(594),VX(595),VY(596),VZ(597),
    WA(598),WB(599),WC(600),WD(601),WE(602),WF(603),WG(604),WH(605),WI(606),WJ(607),WK(608),WL(609),WM(610),WN(611),WO(612),WP(613),WQ(614),WR(615),WS(616),WT(617),WU(618),WV(619),WW(620),WX(621),WY(622),WZ(623),
    XA(624),XB(625),XC(626),XD(627),XE(628),XF(629),XG(630),XH(631),XI(632),XJ(633),XK(634),XL(635),XM(636),XN(637),XO(638),XP(639),XQ(640),XR(641),XS(642),XT(643),XU(644),XV(645),XW(646),XX(647),XY(648),XZ(649),
    YA(650),YB(651),YC(652),YD(653),YE(654),YF(655),YG(656),YH(657),YI(658),YJ(659),YK(660),YL(661),YM(662),YN(663),YO(664),YP(665),YQ(666),YR(667),YS(668),YT(669),YU(670),YV(671),YW(672),YX(673),YY(674),YZ(675),
    ZA(676),ZB(677),ZC(678),ZD(679),ZE(680),ZF(681),ZG(682),ZH(683),ZI(684),ZJ(685),ZK(686),ZL(687),ZM(688),ZN(689),ZO(690),ZP(691),ZQ(692),ZR(693),ZS(694),ZT(695),ZU(696),ZV(697),ZW(698),ZX(699),ZY(700),ZZ(701);
    private int num;
    
    private ColumnIdentify(int num) {
        this.num = num;
    }
    
    public int getNum() {
        return this.num;
    }
    
    public ColumnIdentify next() {
        ColumnIdentify tmpC = null;
        for (ColumnIdentify c : ColumnIdentify.class.getEnumConstants()) {
            if (this == tmpC) {
                return c;
            }
            tmpC = c;
        }
        return A;
    }
    
    public ColumnIdentify prev() {

        ColumnIdentify tmpC = null;
        ColumnIdentify[] ciArr = ColumnIdentify.class.getEnumConstants();
        for (int idx = ciArr.length - 1; idx >= 0;idx--) {
            ColumnIdentify c = ciArr[idx];
            if (this == tmpC) {
                return c;
            }
            tmpC = c;
        }
        return A;
    }
}
